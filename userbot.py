#!/usr/bin/env python3
import time
import asyncio
import datetime

# 1) MONKEY‚ÄëPATCH: —Ä–∞—Å—à–∏—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã –¥–ª—è ¬´Peer id invalid¬ª
import pyrogram.utils as u
u.MIN_CHANNEL_ID = -1003000000000
u.MIN_CHAT_ID    = -999999999999

# 2) Exception‚Äëhandler, —á—Ç–æ–±—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å ¬´Peer id invalid¬ª –∏ –Ω–µ –ø–∞–¥–∞—Ç—å
def setup_asyncio_exception_handler():
    loop = asyncio.get_event_loop()
    def handle_exc(loop, context):
        exc = context.get("exception")
        if isinstance(exc, ValueError) and "Peer id invalid" in str(exc):
            return
        loop.default_exception_handler(context)
    loop.set_exception_handler(handle_exc)

# 3) Heartbeat: –ø–µ—á–∞—Ç–∞–µ—Ç ¬´–∂–∏–≤¬ª –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
async def heartbeat():
    await asyncio.sleep(5)
    while True:
        print(f"üíì Alive at {datetime.datetime.now().isoformat()}")
        await asyncio.sleep(300)

# 4) –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞
from pyrogram import Client, filters

def start():
    setup_asyncio_exception_handler()

    app = Client(
        "userbot_session",
        api_id=27613166,
        api_hash="f8db5c0f8345c59926194dd36a07062b",
        phone_number="+79301221411"
    )

    @app.on_message(filters.private)
    async def handle_gift(client, message):
        gift = getattr(message, "gift", None)
        if not gift:
            return

        report = [
            f"üéÅ –ü–æ–¥–∞—Ä–æ–∫: {getattr(gift, 'name', None) or getattr(gift, 'title', None)}",
            f"ID –ø–æ–¥–∞—Ä–∫–∞: {getattr(gift, 'id', None)}",
            f"–¶–µ–Ω–∞ (stars): {getattr(gift, 'price', None)}",
            f"–î–∞—Ç–∞: {getattr(gift, 'date', None)}",
            f"–°—Å—ã–ª–∫–∞: {getattr(gift, 'link', None)}",
        ]

        attrs = getattr(gift, "attributes", None)
        if attrs:
            for idx, attr in enumerate(attrs, 1):
                report.extend([
                    f"–ê—Ç—Ä–∏–±—É—Ç {idx}:",
                    f"  type: {getattr(attr, 'type', None)}",
                    f"  name: {getattr(attr, 'name', None)}",
                    f"  rarity: {getattr(attr, 'rarity', None)}",
                    f"  date: {getattr(attr, 'date', None)}",
                    f"  caption: {getattr(attr, 'caption', None)}",
                    f"  from_user: {getattr(getattr(attr, 'from_user', None), 'id', None)}",
                    f"  to_user: {getattr(getattr(attr, 'to_user', None), 'id', None)}",
                    f"  center_color: {getattr(attr, 'center_color', None)}",
                    f"  edge_color: {getattr(attr, 'edge_color', None)}",
                    f"  pattern_color: {getattr(attr, 'pattern_color', None)}",
                    f"  text_color: {getattr(attr, 'text_color', None)}",
                    f"  sticker: {getattr(attr, 'sticker', None)}",
                ])
        else:
            report.append("–ê—Ç—Ä–∏–±—É—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

        await client.send_message(gift.from_user.id, "\n".join(report))

    # –ó–∞–ø—É—Å–∫–∞–µ–º heartbeat –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    app.add_task(heartbeat())

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é –ø–æ–¥–∞—Ä–∫–∏ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö‚Ä¶")
    app.run()

# 5) WATCHDOG: –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ 5‚ÄØ—Å–µ–∫.
if __name__ == "__main__":
    while True:
        try:
            start()
        except Exception as e:
            print(f"‚ÄºÔ∏è –ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: {e!r}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5‚ÄØ—Å–µ–∫.")
            time.sleep(5)
        else:
            print("üîÑ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5‚ÄØ—Å–µ–∫.")
            time.sleep(5)
