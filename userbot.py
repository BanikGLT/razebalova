#!/usr/bin/env python3
import os
import time
import asyncio
import datetime

# 1) –†–∞—Å—à–∏—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã peer_id, —á—Ç–æ–±—ã –Ω–∏ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø–∞ –Ω–µ –≤—ã–≤–∞–ª–∏–≤–∞–ª–∏—Å—å
import pyrogram.utils as u
u.MIN_CHANNEL_ID = -1003000000000
u.MIN_CHAT_ID    = -999999999999

from pyrofork import Client, filters, idle

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–π —É—á—ë—Ç–∫–∏
API_ID    = 27613166
API_HASH  = "f8db5c0f8345c59926194dd36a07062b"
PHONE     = "+79301221411"
# –ë–∞–∑–æ–≤–æ–µ –∏–º—è —Å–µ—Å—Å–∏–∏ (—Ñ–∞–π–ª userbot_session.session)
SESSION   = os.path.join(os.path.dirname(__file__), "userbot_session")


# 2) –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –Ω–æ–º–µ—Ä–æ–º ‚Äî –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ–ø—Ä–æ—Å–∏—Ç –∫–æ–¥, –¥–∞–ª—å—à–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏
app = Client(
    SESSION,
    api_id=API_ID,
    api_hash=API_HASH,
    phone_number=PHONE
)


# 3) –•—ç–Ω–¥–ª–µ—Ä star‚Äëgifts: –ª–æ–≤–∏–º —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–∏—á–∫–µ
@app.on_message(filters.private & filters.service)
async def handle_gift(client, message):
    try:
        gift = getattr(message, "gift", None)
        if not gift:
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ —Å–ª–∞—Ç—å –æ—Ç—á—ë—Ç: prefer sender, fallback ‚Äî —Ç–æ—Ç –∂–µ —á–∞—Ç
        chat_id = getattr(gift.from_user, "id", message.chat.id)

        lines = [
            f"üéÅ –ü–æ–¥–∞—Ä–æ–∫: {getattr(gift, 'name', None) or getattr(gift, 'title', None) or '‚Äî'}",
            f"ID: {getattr(gift, 'id', '‚Äî')}",
            f"–¶–µ–Ω–∞ (stars): {getattr(gift, 'price', '‚Äî')}",
            f"–î–∞—Ç–∞: {getattr(gift, 'date', '‚Äî')}",
            f"–°—Å—ã–ª–∫–∞: {getattr(gift, 'link', '‚Äî')}",
            "",
            "‚îÄ‚îÄ –ê—Ç—Ä–∏–±—É—Ç—ã –ø–æ–¥–∞—Ä–∫–∞ ‚îÄ‚îÄ"
        ]

        for idx, attr in enumerate(getattr(gift, "attributes", []) or [], start=1):
            lines.extend([
                f" –ê—Ç—Ä–∏–±—É—Ç #{idx}:",
                f"   type:   {getattr(attr, 'type', '‚Äî')}",
                f"   name:   {getattr(attr, 'name', '‚Äî')}",
                f"   rarity: {getattr(attr, 'rarity', '‚Äî')}",
                f"   date:   {getattr(attr, 'date', '‚Äî')}",
                f"   caption:{getattr(attr, 'caption', '‚Äî')}",
                f"   sticker:{getattr(attr, 'sticker', '‚Äî')}",
                f"   colors: center={getattr(attr, 'center_color', '‚Äî')}, "
                 f"edge={getattr(attr, 'edge_color', '‚Äî')}, "
                 f"pattern={getattr(attr, 'pattern_color', '‚Äî')}, "
                 f"text={getattr(attr, 'text_color', '‚Äî')}",
                ""
            ])

        await client.send_message(chat_id, "\n".join(lines))

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –ª—é–±—É—é –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –¥–∞—ë–º –µ–π —É–±–∏—Ç—å –±–æ—Ç–∞
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ handle_gift: {e!r}")


# 4) Heartbeat ‚Äî –∏–Ω–¥–∏–∫–∞—Ü–∏—è ¬´—è –∂–∏–≤¬ª
async def heartbeat():
    await asyncio.sleep(5)
    while True:
        print(f"üíì Alive at {datetime.datetime.now().isoformat()}")
        await asyncio.sleep(300)


# 5) –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    await app.start()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥—É star‚Äëgifts –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö‚Ä¶")
    # –°—Ç–∞—Ä—Ç heartbeat
    asyncio.create_task(heartbeat())
    # –ñ–¥—ë–º Ctrl+C –∏ –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    await idle()
    await app.stop()
    print("üîÑ –ë–æ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


if __name__ == "__main__":
    asyncio.run(main())
