#!/usr/bin/env python3
import os
import asyncio
import datetime

# 1) MONKEY‚ÄëPATCH –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª—é–±—ã—Ö peer_id
import pyrogram.utils as u
u.MIN_CHANNEL_ID = -1003000000000
u.MIN_CHAT_ID    = -999999999999

from pyrogram import Client, filters, idle

API_ID   = 27613166
API_HASH = "f8db5c0f8345c59926194dd36a07062b"
PHONE    = "+79301221411"
SESSION  = os.path.join(os.path.dirname(__file__), "userbot_session")

# 2) –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç —Å –Ω–æ–º–µ—Ä–æ–º ‚Äî Pyrogram –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Å–ø—Ä–æ—Å–∏—Ç –∫–æ–¥,
#    –ø—Ä–∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö ‚Äî –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –∏ –Ω–µ —Å—Ç–∞–Ω–µ—Ç —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å–Ω–æ–≤–∞.
app = Client(
    SESSION,
    api_id=API_ID,
    api_hash=API_HASH,
    phone_number=PHONE
)

# 3) –•—ç–Ω–¥–ª–µ—Ä star‚Äëgifts
@app.on_message(filters.private)
async def handle_gift(client, message):
    gift = getattr(message, "gift", None)
    if not gift:
        return

    report = [
        f"üéÅ –ü–æ–¥–∞—Ä–æ–∫: {gift.name or gift.title}",
        f"ID: {gift.id}",
        f"–¶–µ–Ω–∞ (stars): {gift.price}",
        f"–î–∞—Ç–∞: {gift.date}",
        f"–°—Å—ã–ª–∫–∞: {gift.link}",
    ]

    for idx, attr in enumerate(gift.attributes or [], 1):
        report.extend([
            f"‚îÄ‚îÄ –ê—Ç—Ä–∏–±—É—Ç #{idx} ‚îÄ‚îÄ",
            f"type: {attr.type}",
            f"name: {attr.name}",
            f"rarity: {attr.rarity}",
            f"date: {attr.date}",
            f"caption: {attr.caption}",
            f"from_user: {getattr(attr.from_user, 'id', None)}",
            f"to_user:   {getattr(attr.to_user,   'id', None)}",
            f"center_color:  {attr.center_color}",
            f"edge_color:    {attr.edge_color}",
            f"pattern_color: {attr.pattern_color}",
            f"text_color:    {attr.text_color}",
            f"sticker:       {attr.sticker}",
        ])

    await client.send_message(gift.from_user.id, "\n".join(report))

# 4) Heartbeat, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –±–æ—Ç –∂–∏–≤
async def heartbeat():
    await asyncio.sleep(5)
    while True:
        print(f"üíì Alive at {datetime.datetime.now().isoformat()}")
        await asyncio.sleep(300)

# 5) –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
async def main():
    await app.start()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é –ø–æ–¥–∞—Ä–∫–∏ –≤ –õ–°‚Ä¶")
    # –ó–∞–ø—É—Å–∫–∞–µ–º heartbeat
    asyncio.create_task(heartbeat())
    # –ñ–¥—ë–º Ctrl+C
    await idle()
    await app.stop()
    print("üîÑ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == "__main__":
    asyncio.run(main())
