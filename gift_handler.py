import asyncio
import logging
from typing import Dict, Any
from pyrogram import Client
from pyrogram.types import Message

logger = logging.getLogger(__name__)

class GiftHandler:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ Telegram"""
    
    def __init__(self, client: Client):
        self.client = client
    
    async def get_gift_info(self, message: Message) -> Dict[str, Any]:
        """
        –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–∞—Ä–∫–æ–º
            
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
        """
        gift_info = {
            "sender": None,
            "sender_id": None,
            "gift_type": "Unknown",
            "gift_description": "–ü–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω",
            "timestamp": message.date,
            "message_id": message.id
        }
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
        if message.from_user:
            gift_info["sender"] = message.from_user.first_name
            if message.from_user.last_name:
                gift_info["sender"] += f" {message.from_user.last_name}"
            gift_info["sender_id"] = message.from_user.id
            
            # –î–æ–±–∞–≤–ª—è–µ–º username –µ—Å–ª–∏ –µ—Å—Ç—å
            if message.from_user.username:
                gift_info["sender_username"] = message.from_user.username
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –ø–æ–¥–∞—Ä–∫–∞
        if message.service:
            if message.service == MessageServiceType.GIFT:
                gift_info["gift_type"] = "Telegram Gift"
                gift_info["gift_description"] = "–ü–æ–ª—É—á–µ–Ω –ø–æ–¥–∞—Ä–æ–∫ –≤ Telegram"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.text:
            gift_info["message_text"] = message.text
        
        return gift_info
    
    async def format_gift_response(self, gift_info: Dict[str, Any]) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ä–∫–µ
        
        Args:
            gift_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ
            
        Returns:
            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        sender_name = gift_info.get("sender", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
        gift_type = gift_info.get("gift_type", "Unknown")
        timestamp = gift_info.get("timestamp")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
        time_str = timestamp.strftime("%H:%M:%S %d.%m.%Y") if timestamp else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        response = f"üéÅ **–ü–æ–ª—É—á–µ–Ω –ø–æ–¥–∞—Ä–æ–∫!**\n\n"
        response += f"üë§ **–û—Ç:** {sender_name}\n"
        
        if gift_info.get("sender_username"):
            response += f"üì± **Username:** @{gift_info['sender_username']}\n"
        
        response += f"üé≠ **–¢–∏–ø –ø–æ–¥–∞—Ä–∫–∞:** {gift_type}\n"
        response += f"‚è∞ **–í—Ä–µ–º—è:** {time_str}\n"
        
        if gift_info.get("message_text"):
            response += f"üí¨ **–°–æ–æ–±—â–µ–Ω–∏–µ:** {gift_info['message_text']}\n"
        
        response += f"\n‚úÖ **–°—Ç–∞—Ç—É—Å:** –ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!"
        
        return response
    
    async def send_gift_response(self, message: Message, gift_info: Dict[str, Any]) -> bool:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é –ø–æ–¥–∞—Ä–∫–∞
        
        Args:
            message: –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–∞—Ä–∫–æ–º
            gift_info: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ
            
        Returns:
            True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
        """
        try:
            response_text = await self.format_gift_response(gift_info)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
            if message.from_user:
                await self.client.send_message(
                    chat_id=message.from_user.id,
                    text=response_text
                )
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {gift_info.get('sender')} (ID: {gift_info.get('sender_id')})")
                return True
            else:
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–∞")
                return False
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
            return False
    
    async def process_gift(self, message: Message) -> bool:
        """
        –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–∞—Ä–∫–∞
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–∞—Ä–∫–æ–º
            
        Returns:
            True –µ—Å–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ
        """
        try:
            logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ID: {message.id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
            gift_info = await self.get_gift_info(message)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ
            logger.info(f"–ü–æ–ª—É—á–µ–Ω –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç {gift_info.get('sender')} (ID: {gift_info.get('sender_id')})")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            success = await self.send_gift_response(message, gift_info)
            
            if success:
                logger.info("–ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
            else:
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫")
            
            return success
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")
            return False